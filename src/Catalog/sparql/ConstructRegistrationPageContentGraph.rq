PREFIX nuget: <http://schema.nuget.org/schema#>
PREFIX catalog: <http://schema.nuget.org/catalog#>

CONSTRUCT
{
    ?package a nuget:Package ;
	         nuget:registration ?registration ;
	         nuget:packageContent ?packageContent ;
	         nuget:catalogEntry ?catalogEntry .

    ?catalogEntry a nuget:PackageDetails ;
                  nuget:id ?id ;
                  nuget:version ?version ;
                  nuget:published ?published ;
                  nuget:packageContent ?packageContent ;
                  nuget:dependencyGroup ?dependency_group ;
                  nuget:listed ?listed ;
                  nuget:description ?description ;
                  nuget:title ?title ;
                  nuget:summary ?summary ;
                  nuget:iconUrl ?iconUrl ;
                  nuget:licenseUrl ?licenseUrl ;
                  nuget:licenseExpression ?licenseExpression ;
                  nuget:projectUrl ?projectUrl ;
                  nuget:requireLicenseAcceptance ?requireLicenseAcceptance ;
                  nuget:language ?language ;
                  nuget:authors ?authors ;
                  nuget:tag ?tag ;
                  nuget:minClientVersion ?minClientVersion ;
                  nuget:deprecation ?deprecation .

    ?dependency_group a nuget:PackageDependencyGroup ;
                      nuget:dependency ?dependency ;
                      nuget:targetFramework ?dependency_group_targetFramework .

    ?dependency a nuget:PackageDependency ;
	            nuget:id ?dependency_id ;
                nuget:registration ?dependency_registration ;
                nuget:range ?dependency_range ;
                nuget:version ?dependency_version .

    ?deprecation a nuget:deprecation ;
                 nuget:reasons ?deprecation_reasons ;
                 nuget:message ?deprecation_message ;
                 nuget:alternatePackage ?deprecation_alternatePackage .

    ?deprecation_alternatePackage a nuget:alternatePackage ;
                                  nuget:id ?deprecation_alternatePackage_id ;
                                  nuget:range ?deprecation_alternatePackage_range .
}
WHERE
{
	BIND (@catalogEntry AS ?catalogEntry)
	BIND (@package AS ?package)

	BIND (IRI(CONCAT(STR(@baseAddress), "index.json")) AS ?registration)

	BIND(@licenseUrl AS ?licenseUrl)

	BIND(@iconUrl AS ?iconUrl)

    ?catalogEntry nuget:version ?version ;
                  nuget:id ?id ;
	              nuget:published ?published .

	OPTIONAL { ?catalogEntry nuget:packageContent ?optionalPackageContent . }
	BIND(COALESCE(?optionalPackageContent, @packageContent) AS ?packageContent)

	OPTIONAL { ?catalogEntry nuget:description ?optionalDescription . }
	OPTIONAL { ?catalogEntry nuget:title ?optionalTitle . }
	OPTIONAL { ?catalogEntry nuget:summary ?optionalSummary . }
	OPTIONAL { ?catalogEntry nuget:licenseExpression ?optionalLicenseExpression . }
	OPTIONAL { ?catalogEntry nuget:projectUrl ?optionalProjectUrl . }
	OPTIONAL { ?catalogEntry nuget:requireLicenseAcceptance ?optionalRequireLicenseAcceptance . }
	OPTIONAL { ?catalogEntry nuget:language ?optionalLanguage . }
	OPTIONAL { ?catalogEntry nuget:authors ?optionalAuthors . }
	OPTIONAL { ?catalogEntry nuget:tag ?optionalTag . }
	OPTIONAL { ?catalogEntry nuget:minClientVersion ?optionalMinClientVersion . }
	OPTIONAL { ?catalogEntry nuget:listed ?optionalListed . }

	BIND(COALESCE(?optionalDescription, "") AS ?description)
	BIND(COALESCE(?optionalTitle, "") AS ?title)
	BIND(COALESCE(?optionalSummary, "") AS ?summary)
	BIND(COALESCE(?optionalLicenseExpression, "") AS ?licenseExpression)
	BIND(COALESCE(?optionalProjectUrl, "") AS ?projectUrl)
	BIND(COALESCE(?optionalRequireLicenseAcceptance, false) AS ?requireLicenseAcceptance)
	BIND(COALESCE(?optionalLanguage, "") AS ?language)
	BIND(COALESCE(?optionalAuthors, "") AS ?authors)
	BIND(COALESCE(?optionalTag, "") AS ?tag)
	BIND(COALESCE(?optionalMinClientVersion, "") AS ?minClientVersion)

	BIND (IF (year(?published) = 1900, false, true) as ?listedFromPublished)
	BIND(COALESCE(?optionalListed, ?listedFromPublished) AS ?listed)

    OPTIONAL
    {
        ?catalogEntry nuget:dependencyGroup ?dependency_group .

        OPTIONAL { ?dependency_group nuget:targetFramework ?dependency_group_targetFramework . }

		OPTIONAL
		{
			?dependency_group nuget:dependency ?dependency .
			?dependency nuget:id ?dependency_id .
			BIND (IRI(CONCAT(STR(@registrationBaseAddress), LCASE(?dependency_id), "/index.json")) AS ?dependency_registration)
	        OPTIONAL { ?dependency nuget:range ?dependency_range . }
	        OPTIONAL { ?dependency nuget:version ?dependency_version . }
		}
    }
    
    OPTIONAL
    {
        ?catalogEntry nuget:deprecation ?deprecation .
        ?deprecation nuget:reasons ?deprecation_reasons .
        OPTIONAL { ?deprecation nuget:message ?deprecation_message . }
        OPTIONAL 
        { 
            ?deprecation nuget:alternatePackage ?deprecation_alternatePackage . 
            ?deprecation_alternatePackage nuget:id ?deprecation_alternatePackage_id .
            ?deprecation_alternatePackage nuget:range ?deprecation_alternatePackage_range .
        }
    }
}
