PREFIX nuget: <http://schema.nuget.org/schema#>
PREFIX catalog: <http://schema.nuget.org/catalog#>

CONSTRUCT
{
    ?package a nuget:Package ;
	         nuget:registration ?registration ;
             nuget:packageContent ?packageContent ;
	         nuget:catalogEntry ?catalogPackage .

    ?catalogPackage a nuget:PackageDetails ;
                    nuget:id ?id ;
                    nuget:version ?version ;
                    nuget:dependencyGroup ?dependency_group ;
	                nuget:published ?published ;
					nuget:listed ?listed ;
			        nuget:description ?description ;
                    nuget:title ?title ;
                    nuget:summary ?summary ;
                    nuget:iconUrl ?iconUrl ;
                    nuget:licenseUrl ?licenseUrl ;
                    nuget:projectUrl ?projectUrl ;
                    nuget:requireLicenseAcceptance ?requireLicenseAcceptance ;
                    nuget:language ?language ;
                    nuget:authors ?authors ;
                    nuget:tag ?tag ;
                    nuget:minClientVersion ?minClientVersion .

    ?dependency_group a nuget:PackageDependencyGroup ;
	                  nuget:dependency ?dependency ;
                      nuget:targetFramework ?dependency_group_targetFramework .

    ?dependency a nuget:PackageDependency ;
	            nuget:id ?dependency_id ;
                nuget:registration ?dependency_registration ;
                nuget:range ?dependency_version .
}
WHERE
{
	BIND (@catalogPackage AS ?catalogPackage)
	BIND (@package AS ?package)
    BIND (@packageContent AS ?packageContent)

	BIND (IRI(CONCAT(STR(@baseAddress), "index.json")) AS ?registration)
	
    ?catalogPackage nuget:version ?version ;
                    nuget:id ?id ;
	                nuget:published ?published .
					
	OPTIONAL { ?catalogPackage nuget:description ?optionalDescription . }
	OPTIONAL { ?catalogPackage nuget:title ?optionalTitle . }
	OPTIONAL { ?catalogPackage nuget:summary ?optionalSummary . }
	OPTIONAL { ?catalogPackage nuget:iconUrl ?optionalIconUrl . }
	OPTIONAL { ?catalogPackage nuget:licenseUrl ?optionalLicenseUrl . }
	OPTIONAL { ?catalogPackage nuget:projectUrl ?optionalProjectUrl . }
	OPTIONAL { ?catalogPackage nuget:requireLicenseAcceptance ?optionalRequireLicenseAcceptance . }
	OPTIONAL { ?catalogPackage nuget:language ?optionalLanguage . }
	OPTIONAL { ?catalogPackage nuget:authors ?optionalAuthors . }
	OPTIONAL { ?catalogPackage nuget:tag ?optionalTag . }
	OPTIONAL { ?catalogPackage nuget:minClientVersion ?optionalMinClientVersion . }

	BIND(COALESCE(?optionalDescription, "") AS ?description)
	BIND(COALESCE(?optionalTitle, "") AS ?title)
	BIND(COALESCE(?optionalSummary, "") AS ?summary)
	BIND(COALESCE(?optionalIconUrl, "") AS ?iconUrl)
	BIND(COALESCE(?optionalLicenseUrl, "") AS ?licenseUrl)
	BIND(COALESCE(?optionalProjectUrl, "") AS ?projectUrl)
	BIND(COALESCE(?optionalRequireLicenseAcceptance, false) AS ?requireLicenseAcceptance)
	BIND(COALESCE(?optionalLanguage, "") AS ?language)
	BIND(COALESCE(?optionalAuthors, "") AS ?authors)
	BIND(COALESCE(?optionalTag, "") AS ?tag)
	BIND(COALESCE(?optionalMinClientVersion, "") AS ?minClientVersion)
	BIND (IF (year(?published) = 1900, false, true) as ?listed)
	
    OPTIONAL
    {
        ?catalogPackage nuget:dependencyGroup ?dependency_group .

		OPTIONAL { ?dependency_group nuget:targetFramework ?dependency_group_targetFramework . }
        
		OPTIONAL
		{ 
			?dependency_group nuget:dependency ?dependency .
	        ?dependency nuget:id ?dependency_id .
        
			BIND (IRI(CONCAT(STR(@registrationBaseAddress), LCASE(?dependency_id), "/index.json")) AS ?dependency_registration)
        
			OPTIONAL { ?dependency nuget:range ?dependency_version . }
		}
    }
}
